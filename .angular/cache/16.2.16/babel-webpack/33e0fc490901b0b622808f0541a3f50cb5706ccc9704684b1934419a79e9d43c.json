{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CocktailFilterPipe {\n  transform(cocktails, searchText, filters, sortAsc) {\n    if (!cocktails) return [];\n    let result = cocktails.filter(drink => drink.strDrink.toLowerCase().includes((searchText || '').toLowerCase()));\n    result = result.filter(drink => {\n      const isAlcoholic = drink.strAlcoholic === 'Alcoholic';\n      const isNonAlcoholic = drink.strAlcoholic === 'Non alcoholic';\n      return !filters.alcoholic && !filters.nonAlcoholic || filters.alcoholic && isAlcoholic || filters.nonAlcoholic && isNonAlcoholic;\n    });\n    result.sort((a, b) => sortAsc ? a.strDrink.localeCompare(b.strDrink) : b.strDrink.localeCompare(a.strDrink));\n    return result;\n  }\n  static {\n    this.ɵfac = function CocktailFilterPipe_Factory(t) {\n      return new (t || CocktailFilterPipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n      name: \"cocktailFilter\",\n      type: CocktailFilterPipe,\n      pure: true\n    });\n  }\n}","map":{"version":3,"names":["CocktailFilterPipe","transform","cocktails","searchText","filters","sortAsc","result","filter","drink","strDrink","toLowerCase","includes","isAlcoholic","strAlcoholic","isNonAlcoholic","alcoholic","nonAlcoholic","sort","a","b","localeCompare","pure"],"sources":["E:\\New folder\\cocktail-for-you\\src\\app\\core\\pipes\\cocktail-filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cocktailFilter',\n  pure: true,\n})\nexport class CocktailFilterPipe implements PipeTransform {\n  transform(\n    cocktails: any[],\n    searchText: string,\n    filters: { alcoholic: boolean; nonAlcoholic: boolean },\n    sortAsc: boolean\n  ): any[] {\n    if (!cocktails) return [];\n\n    let result = cocktails.filter((drink) =>\n      drink.strDrink.toLowerCase().includes((searchText || '').toLowerCase())\n    );\n\n    result = result.filter((drink) => {\n      const isAlcoholic = drink.strAlcoholic === 'Alcoholic';\n      const isNonAlcoholic = drink.strAlcoholic === 'Non alcoholic';\n\n      return (\n        (!filters.alcoholic && !filters.nonAlcoholic) ||\n        (filters.alcoholic && isAlcoholic) ||\n        (filters.nonAlcoholic && isNonAlcoholic)\n      );\n    });\n\n    result.sort((a, b) =>\n      sortAsc\n        ? a.strDrink.localeCompare(b.strDrink)\n        : b.strDrink.localeCompare(a.strDrink)\n    );\n\n    return result;\n  }\n}\n"],"mappings":";AAMA,OAAM,MAAOA,kBAAkB;EAC7BC,SAASA,CACPC,SAAgB,EAChBC,UAAkB,EAClBC,OAAsD,EACtDC,OAAgB;IAEhB,IAAI,CAACH,SAAS,EAAE,OAAO,EAAE;IAEzB,IAAII,MAAM,GAAGJ,SAAS,CAACK,MAAM,CAAEC,KAAK,IAClCA,KAAK,CAACC,QAAQ,CAACC,WAAW,EAAE,CAACC,QAAQ,CAAC,CAACR,UAAU,IAAI,EAAE,EAAEO,WAAW,EAAE,CAAC,CACxE;IAEDJ,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAEC,KAAK,IAAI;MAC/B,MAAMI,WAAW,GAAGJ,KAAK,CAACK,YAAY,KAAK,WAAW;MACtD,MAAMC,cAAc,GAAGN,KAAK,CAACK,YAAY,KAAK,eAAe;MAE7D,OACG,CAACT,OAAO,CAACW,SAAS,IAAI,CAACX,OAAO,CAACY,YAAY,IAC3CZ,OAAO,CAACW,SAAS,IAAIH,WAAY,IACjCR,OAAO,CAACY,YAAY,IAAIF,cAAe;IAE5C,CAAC,CAAC;IAEFR,MAAM,CAACW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KACfd,OAAO,GACHa,CAAC,CAACT,QAAQ,CAACW,aAAa,CAACD,CAAC,CAACV,QAAQ,CAAC,GACpCU,CAAC,CAACV,QAAQ,CAACW,aAAa,CAACF,CAAC,CAACT,QAAQ,CAAC,CACzC;IAED,OAAOH,MAAM;EACf;;;uBA/BWN,kBAAkB;IAAA;EAAA;;;;YAAlBA,kBAAkB;MAAAqB,IAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}