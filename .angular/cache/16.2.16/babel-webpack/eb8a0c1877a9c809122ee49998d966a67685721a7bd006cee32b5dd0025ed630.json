{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/core/services/cocktail.service\";\nfunction IngredientComponent_div_0_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"img\", 5);\n    i0.ɵɵelementStart(2, \"div\", 11);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", item_r2.ingredient);\n    i0.ɵɵproperty(\"src\", ctx_r1.getIngredientImage(item_r2.ingredient), i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", item_r2.measure, \" \", item_r2.ingredient, \"\");\n  }\n}\nfunction IngredientComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"h2\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4);\n    i0.ɵɵelement(6, \"img\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 6)(8, \"h3\");\n    i0.ɵɵtext(9, \"Ingredients\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 7);\n    i0.ɵɵtemplate(11, IngredientComponent_div_0_div_11_Template, 4, 4, \"div\", 8);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"div\", 9)(13, \"h3\");\n    i0.ɵɵtext(14, \"Instructions\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"p\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.drink.strDrink);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"alt\", ctx_r0.drink.strDrink);\n    i0.ɵɵproperty(\"src\", ctx_r0.drink.strDrinkThumb, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getIngredients());\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.drink.strInstructions);\n  }\n}\nexport class IngredientComponent {\n  constructor(route, cocktailService) {\n    this.route = route;\n    this.cocktailService = cocktailService;\n  }\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id') || '';\n    this.cocktailService.getDrinkById(id).subscribe(res => {\n      this.drink = res.drinks?.[0] || null;\n    });\n  }\n  getIngredients() {\n    if (!this.drink) return [];\n    const ingredients = [];\n    for (let i = 1; i <= 15; i++) {\n      const ingr = this.drink[`strIngredient${i}`];\n      const measure = this.drink[`strMeasure${i}`] || '';\n      if (ingr) ingredients.push({\n        ingredient: ingr,\n        measure: measure.trim()\n      });\n    }\n    return ingredients;\n  }\n  getIngredientImage(ingredient) {\n    return `https://www.thecocktaildb.com/images/ingredients/${encodeURIComponent(ingredient)}.png`;\n  }\n  static {\n    this.ɵfac = function IngredientComponent_Factory(t) {\n      return new (t || IngredientComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CocktailService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: IngredientComponent,\n      selectors: [[\"app-ingredients\"]],\n      decls: 1,\n      vars: 1,\n      consts: [[\"class\", \"ingredient-container\", 4, \"ngIf\"], [1, \"ingredient-container\"], [1, \"ingredient-header\"], [1, \"ingredient-body\"], [1, \"left-panel\"], [3, \"src\", \"alt\"], [1, \"right-panel\"], [1, \"ingredient-grid\"], [\"class\", \"ingredient-card\", 4, \"ngFor\", \"ngForOf\"], [1, \"instructions\"], [1, \"ingredient-card\"], [1, \"caption\"]],\n      template: function IngredientComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, IngredientComponent_div_0_Template, 17, 5, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.drink);\n        }\n      },\n      styles: [\"\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\t\\\"use strict\\\";\\n\\n \\t\\n\\n \\t\\n\\n })()[_ngcontent-%COMP%]\\n;\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵpropertyInterpolate","item_r2","ingredient","ɵɵproperty","ctx_r1","getIngredientImage","ɵɵsanitizeUrl","ɵɵtextInterpolate2","measure","ɵɵtemplate","IngredientComponent_div_0_div_11_Template","ɵɵtextInterpolate","ctx_r0","drink","strDrink","strDrinkThumb","getIngredients","strInstructions","IngredientComponent","constructor","route","cocktailService","ngOnInit","id","snapshot","paramMap","get","getDrinkById","subscribe","res","drinks","ingredients","i","ingr","push","trim","encodeURIComponent","ɵɵdirectiveInject","i1","ActivatedRoute","i2","CocktailService","selectors","decls","vars","consts","template","IngredientComponent_Template","rf","ctx","IngredientComponent_div_0_Template"],"sources":["E:\\angular-assignment-cocktailapp\\cocktail-for-you\\src\\app\\features\\ingredients\\ingredients.component.ts","E:\\angular-assignment-cocktailapp\\cocktail-for-you\\src\\app\\features\\ingredients\\ingredients.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CocktailService } from 'src/app/core/services/cocktail.service';\n\n@Component({\n  selector: 'app-ingredients',\n  templateUrl: './ingredients.component.html',\n  styleUrls: ['./ingredient.component.scss']\n})\nexport class IngredientComponent implements OnInit {\n  drink: any;\n\n  constructor(private route: ActivatedRoute, private cocktailService: CocktailService) {}\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id') || '';\n    this.cocktailService.getDrinkById(id).subscribe((res: any) => {\n      this.drink = res.drinks?.[0] || null;\n    });\n  }\n\n  getIngredients(): { ingredient: string; measure: string }[] {\n    if (!this.drink) return [];\n\n    const ingredients = [];\n    for (let i = 1; i <= 15; i++) {\n      const ingr = this.drink[`strIngredient${i}`];\n      const measure = this.drink[`strMeasure${i}`] || '';\n      if (ingr) ingredients.push({ ingredient: ingr, measure: measure.trim() });\n    }\n    return ingredients;\n  }\n\n  getIngredientImage(ingredient: string): string {\n    return `https://www.thecocktaildb.com/images/ingredients/${encodeURIComponent(ingredient)}.png`;\n  }\n}\n","<div *ngIf=\"drink\" class=\"ingredient-container\">\n  <div class=\"ingredient-header\">\n    <h2>{{ drink.strDrink }}</h2>\n  </div>\n\n  <div class=\"ingredient-body\">\n    <!-- Left Column -->\n    <div class=\"left-panel\">\n      <img [src]=\"drink.strDrinkThumb\" alt=\"{{ drink.strDrink }}\" />\n    </div>\n\n    <!-- Right Column -->\n    <div class=\"right-panel\">\n      <h3>Ingredients</h3>\n      <div class=\"ingredient-grid\">\n        <div class=\"ingredient-card\" *ngFor=\"let item of getIngredients()\">\n          <img [src]=\"getIngredientImage(item.ingredient)\" alt=\"{{ item.ingredient }}\" />\n          <div class=\"caption\">{{ item.measure }} {{ item.ingredient }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"instructions\">\n    <h3>Instructions</h3>\n    <p>{{ drink.strInstructions }}</p>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}