{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SearchFilterPipe {\n  transform(items, searchText, field, filters, sortAsc = true) {\n    if (!items) return [];\n    // Apply search\n    if (searchText) {\n      const lowerSearch = searchText.toLowerCase();\n      items = items.filter(item => item[field]?.toLowerCase().includes(lowerSearch));\n    }\n    // Apply checkbox filter\n    items = items.filter(item => {\n      const type = (item.strAlcoholic || '').toLowerCase();\n      return !filters.alcoholic && !filters.nonAlcoholic || filters.alcoholic && type === 'alcoholic' || filters.nonAlcoholic && type === 'non alcoholic';\n    });\n    // Sort result\n    return items.sort((a, b) => sortAsc ? a[field].localeCompare(b[field]) : b[field].localeCompare(a[field]));\n  }\n  static {\n    this.ɵfac = function SearchFilterPipe_Factory(t) {\n      return new (t || SearchFilterPipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n      name: \"searchFilter\",\n      type: SearchFilterPipe,\n      pure: true\n    });\n  }\n}","map":{"version":3,"names":["SearchFilterPipe","transform","items","searchText","field","filters","sortAsc","lowerSearch","toLowerCase","filter","item","includes","type","strAlcoholic","alcoholic","nonAlcoholic","sort","a","b","localeCompare","pure"],"sources":["E:\\angular-assignment-cocktailapp\\cocktail-for-you\\src\\app\\core\\pipes\\search-filter.pipe.ts"],"sourcesContent":["// src/app/core/pipes/search-filter.pipe.ts\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'searchFilter',\n})\nexport class SearchFilterPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    field: string,\n    filters: { alcoholic: boolean; nonAlcoholic: boolean },\n    sortAsc: boolean = true\n  ): any[] {\n    if (!items) return [];\n\n    // Apply search\n    if (searchText) {\n      const lowerSearch = searchText.toLowerCase();\n      items = items.filter((item) =>\n        item[field]?.toLowerCase().includes(lowerSearch)\n      );\n    }\n\n    // Apply checkbox filter\n    items = items.filter((item) => {\n      const type = (item.strAlcoholic || '').toLowerCase();\n      return (\n        (!filters.alcoholic && !filters.nonAlcoholic) ||\n        (filters.alcoholic && type === 'alcoholic') ||\n        (filters.nonAlcoholic && type === 'non alcoholic')\n      );\n    });\n\n    // Sort result\n    return items.sort((a, b) =>\n      sortAsc\n        ? a[field].localeCompare(b[field])\n        : b[field].localeCompare(a[field])\n    );\n  }\n}\n"],"mappings":";AAOA,OAAM,MAAOA,gBAAgB;EAC3BC,SAASA,CACPC,KAAY,EACZC,UAAkB,EAClBC,KAAa,EACbC,OAAsD,EACtDC,OAAA,GAAmB,IAAI;IAEvB,IAAI,CAACJ,KAAK,EAAE,OAAO,EAAE;IAErB;IACA,IAAIC,UAAU,EAAE;MACd,MAAMI,WAAW,GAAGJ,UAAU,CAACK,WAAW,EAAE;MAC5CN,KAAK,GAAGA,KAAK,CAACO,MAAM,CAAEC,IAAI,IACxBA,IAAI,CAACN,KAAK,CAAC,EAAEI,WAAW,EAAE,CAACG,QAAQ,CAACJ,WAAW,CAAC,CACjD;;IAGH;IACAL,KAAK,GAAGA,KAAK,CAACO,MAAM,CAAEC,IAAI,IAAI;MAC5B,MAAME,IAAI,GAAG,CAACF,IAAI,CAACG,YAAY,IAAI,EAAE,EAAEL,WAAW,EAAE;MACpD,OACG,CAACH,OAAO,CAACS,SAAS,IAAI,CAACT,OAAO,CAACU,YAAY,IAC3CV,OAAO,CAACS,SAAS,IAAIF,IAAI,KAAK,WAAY,IAC1CP,OAAO,CAACU,YAAY,IAAIH,IAAI,KAAK,eAAgB;IAEtD,CAAC,CAAC;IAEF;IACA,OAAOV,KAAK,CAACc,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KACrBZ,OAAO,GACHW,CAAC,CAACb,KAAK,CAAC,CAACe,aAAa,CAACD,CAAC,CAACd,KAAK,CAAC,CAAC,GAChCc,CAAC,CAACd,KAAK,CAAC,CAACe,aAAa,CAACF,CAAC,CAACb,KAAK,CAAC,CAAC,CACrC;EACH;;;uBAlCWJ,gBAAgB;IAAA;EAAA;;;;YAAhBA,gBAAgB;MAAAoB,IAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}