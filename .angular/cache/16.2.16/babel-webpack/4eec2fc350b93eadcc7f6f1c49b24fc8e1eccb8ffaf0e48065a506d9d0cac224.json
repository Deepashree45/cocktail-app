{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let IngredientComponent = class IngredientComponent {\n  constructor(route, cocktailService) {\n    this.route = route;\n    this.cocktailService = cocktailService;\n  }\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id') || '';\n    this.cocktailService.getDrinkById(id).subscribe(res => {\n      this.drink = res.drinks?.[0] || null;\n    });\n  }\n  getIngredients() {\n    if (!this.drink) return [];\n    const ingredients = [];\n    for (let i = 1; i <= 15; i++) {\n      const ingr = this.drink[`strIngredient${i}`];\n      const measure = this.drink[`strMeasure${i}`] || '';\n      if (ingr) ingredients.push({\n        ingredient: ingr,\n        measure: measure.trim()\n      });\n    }\n    return ingredients;\n  }\n  getIngredientImage(ingredient) {\n    return `https://www.thecocktaildb.com/images/ingredients/${encodeURIComponent(ingredient)}.png`;\n  }\n};\nIngredientComponent = __decorate([Component({\n  selector: 'app-ingredient',\n  templateUrl: './ingredient.component.html',\n  styleUrls: ['./ingredient.component.scss']\n})], IngredientComponent);","map":{"version":3,"names":["Component","IngredientComponent","constructor","route","cocktailService","ngOnInit","id","snapshot","paramMap","get","getDrinkById","subscribe","res","drink","drinks","getIngredients","ingredients","i","ingr","measure","push","ingredient","trim","getIngredientImage","encodeURIComponent","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\angular-assignment-cocktailapp\\cocktail-for-you\\src\\app\\features\\ingredients\\ingredients.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CocktailService } from 'src/app/core/services/cocktail.service';\n\n@Component({\n  selector: 'app-ingredient',\n  templateUrl: './ingredient.component.html',\n  styleUrls: ['./ingredient.component.scss']\n})\nexport class IngredientComponent implements OnInit {\n  drink: any;\n\n  constructor(private route: ActivatedRoute, private cocktailService: CocktailService) {}\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id') || '';\n    this.cocktailService.getDrinkById(id).subscribe((res: any) => {\n      this.drink = res.drinks?.[0] || null;\n    });\n  }\n\n  getIngredients(): { ingredient: string; measure: string }[] {\n    if (!this.drink) return [];\n\n    const ingredients = [];\n    for (let i = 1; i <= 15; i++) {\n      const ingr = this.drink[`strIngredient${i}`];\n      const measure = this.drink[`strMeasure${i}`] || '';\n      if (ingr) ingredients.push({ ingredient: ingr, measure: measure.trim() });\n    }\n    return ingredients;\n  }\n\n  getIngredientImage(ingredient: string): string {\n    return `https://www.thecocktaildb.com/images/ingredients/${encodeURIComponent(ingredient)}.png`;\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAG9BC,YAAoBC,KAAqB,EAAUC,eAAgC;IAA/D,KAAAD,KAAK,GAALA,KAAK;IAA0B,KAAAC,eAAe,GAAfA,eAAe;EAAoB;EAEtFC,QAAQA,CAAA;IACN,MAAMC,EAAE,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE;IACvD,IAAI,CAACL,eAAe,CAACM,YAAY,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,GAAQ,IAAI;MAC3D,IAAI,CAACC,KAAK,GAAGD,GAAG,CAACE,MAAM,GAAG,CAAC,CAAC,IAAI,IAAI;IACtC,CAAC,CAAC;EACJ;EAEAC,cAAcA,CAAA;IACZ,IAAI,CAAC,IAAI,CAACF,KAAK,EAAE,OAAO,EAAE;IAE1B,MAAMG,WAAW,GAAG,EAAE;IACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC5B,MAAMC,IAAI,GAAG,IAAI,CAACL,KAAK,CAAC,gBAAgBI,CAAC,EAAE,CAAC;MAC5C,MAAME,OAAO,GAAG,IAAI,CAACN,KAAK,CAAC,aAAaI,CAAC,EAAE,CAAC,IAAI,EAAE;MAClD,IAAIC,IAAI,EAAEF,WAAW,CAACI,IAAI,CAAC;QAAEC,UAAU,EAAEH,IAAI;QAAEC,OAAO,EAAEA,OAAO,CAACG,IAAI;MAAE,CAAE,CAAC;;IAE3E,OAAON,WAAW;EACpB;EAEAO,kBAAkBA,CAACF,UAAkB;IACnC,OAAO,oDAAoDG,kBAAkB,CAACH,UAAU,CAAC,MAAM;EACjG;CACD;AA3BYpB,mBAAmB,GAAAwB,UAAA,EAL/BzB,SAAS,CAAC;EACT0B,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EACW3B,mBAAmB,CA2B/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}