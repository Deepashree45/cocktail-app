{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class NotificationService {\n  register(ref) {\n    this.componentRef = ref;\n  }\n  showError(message, duration = 4000) {\n    this.componentRef?.show(message, 'error', duration);\n  }\n  showSuccess(message, duration = 4000) {\n    this.componentRef?.show(message, 'success', duration);\n  }\n  static {\n    this.ɵfac = function NotificationService_Factory(t) {\n      return new (t || NotificationService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: NotificationService,\n      factory: NotificationService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["NotificationService","register","ref","componentRef","showError","message","duration","show","showSuccess","factory","ɵfac","providedIn"],"sources":["E:\\COCKTAIL-APP-ASSIGNMENT\\cocktail-for-you\\src\\app\\core\\services\\notification.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class NotificationService {\n  private componentRef: any;\n\n  register(ref: any) {\n    this.componentRef = ref;\n  }\n\n  showError(message: string, duration = 4000) {\n    this.componentRef?.show(message, 'error', duration);\n  }\n\n  showSuccess(message: string, duration = 4000) {\n    this.componentRef?.show(message, 'success', duration);\n  }\n\n \n}\n"],"mappings":";AAGA,OAAM,MAAOA,mBAAmB;EAG9BC,QAAQA,CAACC,GAAQ;IACf,IAAI,CAACC,YAAY,GAAGD,GAAG;EACzB;EAEAE,SAASA,CAACC,OAAe,EAAEC,QAAQ,GAAG,IAAI;IACxC,IAAI,CAACH,YAAY,EAAEI,IAAI,CAACF,OAAO,EAAE,OAAO,EAAEC,QAAQ,CAAC;EACrD;EAEAE,WAAWA,CAACH,OAAe,EAAEC,QAAQ,GAAG,IAAI;IAC1C,IAAI,CAACH,YAAY,EAAEI,IAAI,CAACF,OAAO,EAAE,SAAS,EAAEC,QAAQ,CAAC;EACvD;;;uBAbWN,mBAAmB;IAAA;EAAA;;;aAAnBA,mBAAmB;MAAAS,OAAA,EAAnBT,mBAAmB,CAAAU,IAAA;MAAAC,UAAA,EADN;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}