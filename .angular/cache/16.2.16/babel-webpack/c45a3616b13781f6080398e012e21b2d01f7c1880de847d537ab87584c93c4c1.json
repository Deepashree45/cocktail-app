{"ast":null,"code":"import { RouterModule, PreloadAllModules } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  loadChildren: () => import('./features/home/home.module').then(m => m.HomeModule)\n}, {\n  path: 'cocktail/:name',\n  loadChildren: () => import('./features/cocktails/cocktails.module').then(m => m.CocktailsModule),\n  data: {\n    preload: true\n  }\n}, {\n  path: 'ingredients',\n  loadChildren: () => import('./features/ingredients/ingredients.module').then(m => m.IngredientsModule),\n  data: {\n    preload: true\n  }\n}, {\n  path: '**',\n  redirectTo: '',\n  pathMatch: 'full'\n}];\nexport class AppRoutingModule {\n  static {\n    this.ɵfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppRoutingModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [RouterModule.forRoot(routes, {\n        preloadingStrategy: PreloadAllModules\n      }), RouterModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","PreloadAllModules","routes","path","loadChildren","then","m","HomeModule","CocktailsModule","data","preload","IngredientsModule","redirectTo","pathMatch","AppRoutingModule","forRoot","preloadingStrategy","imports","i1","exports"],"sources":["E:\\New folder\\cocktail-for-you\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes, PreloadAllModules } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () =>\n      import('./features/home/home.module').then((m) => m.HomeModule),\n  },\n  {\n    path: 'cocktail/:name',\n    loadChildren: () =>\n      import('./features/cocktails/cocktails.module').then(\n        (m) => m.CocktailsModule\n      ),\n    data: { preload: true },\n  },\n  {\n    path: 'ingredients',\n    loadChildren: () =>\n      import('./features/ingredients/ingredients.module').then(\n        (m) => m.IngredientsModule\n      ),\n    data: { preload: true },\n  },\n  {\n    path: '**',\n    redirectTo: '',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      preloadingStrategy: PreloadAllModules, \n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n"],"mappings":"AACA,SAASA,YAAY,EAAUC,iBAAiB,QAAQ,iBAAiB;;;AAEzE,MAAMC,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EAAE;EACRC,YAAY,EAAEA,CAAA,KACZ,MAAM,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,UAAU;CACjE,EACD;EACEJ,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAEA,CAAA,KACZ,MAAM,CAAC,uCAAuC,CAAC,CAACC,IAAI,CACjDC,CAAC,IAAKA,CAAC,CAACE,eAAe,CACzB;EACHC,IAAI,EAAE;IAAEC,OAAO,EAAE;EAAI;CACtB,EACD;EACEP,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAEA,CAAA,KACZ,MAAM,CAAC,2CAA2C,CAAC,CAACC,IAAI,CACrDC,CAAC,IAAKA,CAAC,CAACK,iBAAiB,CAC3B;EACHF,IAAI,EAAE;IAAEC,OAAO,EAAE;EAAI;CACtB,EACD;EACEP,IAAI,EAAE,IAAI;EACVS,UAAU,EAAE,EAAE;EACdC,SAAS,EAAE;CACZ,CACF;AAUD,OAAM,MAAOC,gBAAgB;;;uBAAhBA,gBAAgB;IAAA;EAAA;;;YAAhBA;IAAgB;EAAA;;;gBANzBd,YAAY,CAACe,OAAO,CAACb,MAAM,EAAE;QAC3Bc,kBAAkB,EAAEf;OACrB,CAAC,EAEMD,YAAY;IAAA;EAAA;;;2EAEXc,gBAAgB;IAAAG,OAAA,GAAAC,EAAA,CAAAlB,YAAA;IAAAmB,OAAA,GAFjBnB,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}